parameters:
  SigningCertificate: ''

jobs:
- job: Pack_Nuget
  displayName: Pack Nuget bundles
  condition: and(succeeded(), eq(variables['DoNuget'], 'true'))

  pool:
    vmImage: windows-2022

  workspace:
    clean: all

  strategy:
    matrix:
      amd64:
        Name: amd64
      win32:
        Name: win32
      arm64:
        Name: arm64

  ${{ if parameters.SigningCertificate }}:
    variables:
    - group: CPythonSign

  steps:
  - checkout: none

  - task: DownloadPipelineArtifact@1
    displayName: 'Download artifact: layout_nuget_$(Name)'
    inputs:
      artifactName: layout_nuget_$(Name)
      targetPath: $(Build.BinariesDirectory)\layout

  - task: NugetToolInstaller@0
    displayName: 'Install Nuget'
    inputs:
      versionSpec: '>=5.0'

  - powershell: >
      nuget pack
      "$(Build.BinariesDirectory)\layout\python.nuspec"
      -OutputDirectory $(Build.ArtifactStagingDirectory)
      -NoPackageAnalysis
      -NonInteractive
    condition: and(succeeded(), not(variables['OverrideNugetVersion']))
    displayName: 'Create nuget package'

  - powershell: >
      nuget pack
      "$(Build.BinariesDirectory)\layout\python.nuspec"
      -OutputDirectory $(Build.ArtifactStagingDirectory)
      -NoPackageAnalysis
      -NonInteractive
      -Version "$(OverrideNugetVersion)"
    condition: and(succeeded(), variables['OverrideNugetVersion'])
    displayName: 'Create nuget package'

  - template: sign-nuget-files.yml
    parameters:
      Include: '*.nupkg'
      WorkingDir: $(Build.ArtifactStagingDirectory)
      SigningCertificate: ${{ parameters.SigningCertificate }}

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: nuget'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: nuget
