name: Release_$(SourceTag)_$(Date:yyyyMMdd)$(Rev:.rr)

parameters:
- name: GitRemote
  displayName: "Git remote"
  type: string
  default: python
  values:
  - 'python'
  - 'hugovk'
  - 'Yhg1s'
  - 'pablogsal'
  - 'ambv'
  - 'zooba'
  - '(Other)'
- name: GitRemote_Other
  displayName: "If Other, specify Git remote"
  type: string
  default: 'python'
- name: SourceTag
  displayName: "Git tag"
  type: string
  default: main
- name: SourceCommit
  displayName: "Git commit ('empty' to disable commit SHA check)"
  type: string
  default: 'empty'
- name: DoPublish
  displayName: "Publish release"
  type: boolean
  default: false
- name: SigningCertificate
  displayName: "Code signing certificate"
  type: string
  default: 'PythonSoftwareFoundation'
  values:
  - 'PythonSoftwareFoundation'
  - 'TestSign'
  - 'Unsigned'
- name: SigningDescription
  displayName: "Signature description"
  type: string
  default: '(default)'
- name: DoJIT
  displayName: "Build the JIT compiler (3.14 and later)"
  type: boolean
  default: false
- name: DoGPG
  displayName: "Include GPG signatures (3.13 and earlier)"
  type: boolean
  default: false
- name: DoFreethreaded
  displayName: "Include free-threaded builds (3.13 and later)"
  type: boolean
  default: true
- name: DoARM64
  displayName: "Publish ARM64 build (3.11 and later)"
  type: boolean
  default: true
- name: DoPGO
  displayName: "Run PGO"
  type: boolean
  default: true
- name: DoPGOARM64
  displayName: "Run ARM64 PGO (requires custom VM)"
  type: boolean
  default: true
- name: DoLayout
  displayName: "Produce full layout artifact"
  type: boolean
  default: true
- name: DoMSIX
  displayName: "Produce Store packages"
  type: boolean
  default: true
- name: DoNuget
  displayName: "Produce Nuget packages"
  type: boolean
  default: true
- name: DoEmbed
  displayName: "Produce embeddable package (w/ PyManager or MSI options)"
  type: boolean
  default: true
- name: DoMSI
  displayName: "Produce EXE/MSI installer"
  type: boolean
  default: true
- name: TestMSI
  displayName: "Run EXE/MSI installer tests"
  type: boolean
  default: true
- name: DoPyManager
  displayName: "Produce PyManager package"
  type: boolean
  default: true
- name: BuildToPublish
  displayName: "Republish a build (select in Resources)"
  type: string
  default: current
  values: ['current', 'build_to_publish']
- name: BuildToPackage
  displayName: "Repackage and publish a build (select in Resources)"
  type: string
  default: current
  values: ['current', 'build_to_package']
- name: SignNuget
  displayName: "Enable Nuget signing (not recommended right now)"
  type: boolean
  default: false
- name: DoJITEnabled
  displayName: "Enable the JIT compiler by default (not used yet)"
  type: boolean
  default: false
- name: DoJITFreethreaded
  displayName: "Build the JIT compiler for free-threaded builds (not used yet)"
  type: boolean
  default: false

resources:
  pipelines:
  - pipeline: build_to_publish
    source: 'Windows-Release'
  - pipeline: build_to_package
    source: 'Windows-Release'

variables:
  ${{ if ne(parameters.GitRemote, '(Other)') }}:
    GitRemote: ${{ parameters.GitRemote }}
  ${{ else }}:
    GitRemote: ${{ parameters.GitRemote_Other }}
  SourceTag: ${{ parameters.SourceTag }}
  ${{ if ne(parameters.SourceCommit, 'empty') }}:
    SourceCommit: ${{ parameters.SourceCommit }}
  ${{ if eq(parameters.SigningCertificate, 'PythonSoftwareFoundation') }}:
    IsRealSigned: true
  ${{ else }}:
    IsRealSigned: false
  ${{ if ne(parameters.SigningDescription, '(default)') }}:
    SigningDescription: ${{ parameters.SigningDescription }}
  PublishARM64: ${{ parameters.DoARM64 }}
# QUEUE TIME VARIABLES
#  PyDotOrgUsername: ''
#  PyDotOrgServer: ''

trigger: none
pr: none

stages:
- ${{ if and(eq(parameters.BuildToPublish, 'current'), eq(parameters.BuildToPackage, 'current')) }}:
  - stage: Build
    displayName: Build binaries
    jobs:
    - template: stage-build.yml
      parameters:
        DoFreethreaded: ${{ parameters.DoFreethreaded }}
        DoPGO: ${{ parameters.DoPGO }}
        DoPGOARM64: ${{ parameters.DoPGOARM64 }}
        ${{ if and(parameters.SigningCertificate, ne(parameters.SigningCertificate, 'Unsigned')) }}:
          ToBeSigned: true
        ${{ if ne(parameters.DoJIT, 'true') }}:
          ExtraOptions: ''
        ${{ elseif ne(parameters.DoJITEnabled, 'true') }}:
          ExtraOptions: '--experimental-jit-off'
        ${{ else }}:
          ExtraOptions: '--experimental-jit'
        ${{ if or(ne(parameters.DoJIT, 'true'), ne(parameters.DoJITFreethreaded, 'true')) }}:
          ExtraOptionsFreethreaded: '--disable-gil'
        ${{ elseif ne(parameters.DoJITEnabled, 'true') }}:
          ExtraOptionsFreethreaded: '--disable-gil --experimental-jit-off'
        ${{ else }}:
          ExtraOptionsFreethreaded: '--disable-gil --experimental-jit'

  - stage: Sign
    displayName: Sign binaries
    dependsOn: Build
    jobs:
    - template: stage-sign.yml
      parameters:
        SigningCertificate: ${{ parameters.SigningCertificate }}
        DoFreethreaded: ${{ parameters.DoFreethreaded }}

- ${{ if eq(parameters.BuildToPublish, 'current') }}:
  - stage: Layout
    ${{ if eq(parameters.BuildToPackage, 'current') }}:
      displayName: Generate layouts
      dependsOn: Sign
    ${{ else }}:
      displayName: Generate layouts from prior build
      dependsOn: []
    jobs:
    - template: stage-layout-full.yml
      parameters:
        BuildToPackage: ${{ parameters.BuildToPackage }}
        DoFreethreaded: ${{ parameters.DoFreethreaded }}
    - template: stage-layout-symbols.yml
      parameters:
        BuildToPackage: ${{ parameters.BuildToPackage }}
        DoFreethreaded: ${{ parameters.DoFreethreaded }}
    - ${{ if eq(parameters.DoEmbed, 'true') }}:
      - template: stage-layout-embed.yml
        parameters:
          BuildToPackage: ${{ parameters.BuildToPackage }}
    - ${{ if eq(parameters.DoNuget, 'true') }}:
      - template: stage-layout-nuget.yml
        parameters:
          BuildToPackage: ${{ parameters.BuildToPackage }}
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
    - ${{ if eq(parameters.DoMSIX, 'true') }}:
      - template: stage-layout-msix.yml
        parameters:
          BuildToPackage: ${{ parameters.BuildToPackage }}
    - ${{ if eq(parameters.DoPyManager, 'true') }}:
      - template: stage-layout-pymanager.yml
        parameters:
          BuildToPackage: ${{ parameters.BuildToPackage }}
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
          DoEmbed: ${{ parameters.DoEmbed }}

  - stage: Pack
    dependsOn: Layout
    displayName: Pack
    jobs:
    #- ${{ if eq(parameters.DoEmbed, 'true') }}:
    #  - template: stage-pack-embed.yml
    - ${{ if eq(parameters.DoMSI, 'true') }}:
      - template: stage-msi.yml
        parameters:
          BuildToPackage: ${{ parameters.BuildToPackage }}
          DoARM64: ${{ parameters.DoARM64}}
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
          ${{ if and(parameters.SigningCertificate, ne(parameters.SigningCertificate, 'Unsigned')) }}:
            SigningCertificate: ${{ parameters.SigningCertificate }}
    - ${{ if eq(parameters.DoMSIX, 'true') }}:
      - template: stage-pack-msix.yml
        parameters:
          ${{ if and(parameters.SigningCertificate, ne(parameters.SigningCertificate, 'Unsigned')) }}:
            SigningCertificate: ${{ parameters.SigningCertificate }}
    - ${{ if eq(parameters.DoNuget, 'true') }}:
      - template: stage-pack-nuget.yml
        parameters:
          ${{ if eq(parameters.SignNuget, 'true') }}:
            ${{ if and(parameters.SigningCertificate, ne(parameters.SigningCertificate, 'Unsigned')) }}:
              SigningCertificate: ${{ parameters.SigningCertificate }}
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
    - ${{ if eq(parameters.DoPyManager, 'true') }}:
      - template: stage-pack-pymanager.yml
        parameters:
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
          DoEmbed: ${{ parameters.DoEmbed }}

  - stage: Test
    dependsOn: Pack
    jobs:
    - ${{ if eq(parameters.DoEmbed, 'true') }}:
      - template: stage-test-embed.yml
    - ${{ if and(eq(parameters.DoMSI, 'true'), eq(parameters.TestMSI, 'true')) }}:
      - template: stage-test-msi.yml
        parameters:
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
    - ${{ if eq(parameters.DoNuget, 'true') }}:
      - template: stage-test-nuget.yml
        parameters:
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
    - ${{ if eq(parameters.DoPyManager, 'true') }}:
      - template: stage-test-pymanager.yml
        parameters:
          DoEmbed: ${{ parameters.DoEmbed }}
          DoFreethreaded: ${{ parameters.DoFreethreaded }}

- ${{ if eq(parameters.DoPublish, 'true') }}:
  - stage: Publish
    displayName: Publish
    dependsOn:
    - ${{ if eq(parameters.BuildToPublish, 'current') }}:
      - Test
    jobs:
    - ${{ if eq(parameters.DoPyManager, 'true') }}:
      - template: stage-publish-pymanager.yml
        parameters:
          BuildToPublish: ${{ parameters.BuildToPublish }}
          DoEmbed: ${{ parameters.DoEmbed }}
          DoFreethreaded: ${{ parameters.DoFreethreaded }}
    - ${{ if eq(parameters.DoMSI, 'true') }}:
      - template: stage-publish-pythonorg.yml
        parameters:
          BuildToPublish: ${{ parameters.BuildToPublish }}
          DoEmbed: ${{ parameters.DoEmbed }}
          IncludeGPG: ${{ parameters.DoGPG }}
    - ${{ if eq(parameters.DoNuget, 'true') }}:
      - template: stage-publish-nugetorg.yml
        parameters:
          BuildToPublish: ${{ parameters.BuildToPublish }}
