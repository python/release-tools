parameters:
  Include: '*.exe, *.dll, *.pyd, *.cat, *.ps1'
  Exclude: 'vcruntime*, libffi*, libcrypto*, libssl*'
  SigningCertificate: ''
  DoFreethreaded: 'false'

jobs:
- ${{ if and(parameters.SigningCertificate, ne(parameters.SigningCertificate, 'Unsigned')) }}:
  - job: Sign_Files
    displayName: Sign Python binaries

    pool:
      vmImage: windows-2022

    workspace:
      clean: all

    strategy:
      matrix:
        win32:
          Name: win32
        amd64:
          Name: amd64
        arm64:
          Name: arm64
        ${{ if eq(parameters.DoFreethreaded, 'true') }}:
          win32_t:
            Name: win32_t
          amd64_t:
            Name: amd64_t
          arm64_t:
            Name: arm64_t

    variables:
    - ${{ if eq(parameters.SigningCertificate, 'PythonSoftwareFoundation') }}:
      - group: CPythonSign
    - ${{ if eq(parameters.SigningCertificate, 'TestSign') }}:
      - group: CPythonTestSign

    steps:
    - template: ./checkout.yml

    - powershell: |
        $d = (.\PCbuild\build.bat -V) | %{ if($_ -match '\s+(\w+):\s*(.+)\s*$') { @{$Matches[1] = $Matches[2];} }};
        $tag = git rev-parse --short HEAD
        $desc = "Python $($d.PythonVersion) ($tag)"
        Write-Host "##vso[task.setvariable variable=SigningDescription]$desc"
        Write-Host "Updated signing description to: $desc"
      displayName: 'Update signing description'
      condition: and(succeeded(), not(variables['SigningDescription']))

    - powershell: |
        Write-Host "##vso[build.addbuildtag]signed"
      displayName: 'Add build tags'

    - task: DownloadPipelineArtifact@2
      displayName: 'Download artifact: unsigned_$(Name)'
      inputs:
        artifactName: unsigned_$(Name)
        targetPath: $(Build.BinariesDirectory)\bin

    - template: sign-files.yml
      parameters:
        Include: ${{ parameters.Include }}
        Exclude: ${{ parameters.Exclude }}
        WorkingDir: $(Build.BinariesDirectory)\bin
        ExtractDir: $(Build.BinariesDirectory)\cert
        SigningCertificate: ${{ parameters.SigningCertificate }}

    - publish: '$(Build.BinariesDirectory)\bin'
      artifact: bin_$(Name)
      displayName: 'Publish artifact: bin_$(Name)'

    - publish: '$(Build.BinariesDirectory)\cert'
      artifact: cert
      displayName: 'Publish artifact: cert'


- ${{ else }}:
  - job: Mark_Unsigned
    displayName: Tag unsigned build

    pool:
      vmImage: windows-2022

    steps:
    - checkout: none

    - powershell: |
        Write-Host "##vso[build.addbuildtag]unsigned"
      displayName: 'Add build tag'
