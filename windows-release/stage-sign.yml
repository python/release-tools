parameters:
  Include: '*.exe, *.dll, *.pyd, *.cat, *.ps1'
  Exclude: 'vcruntime*, libffi*, libcrypto*, libssl*'
  SigningCertificate: ''

jobs:
- ${{ if parameters.SigningCertificate }}:
  - job: Sign_Files
    displayName: Sign Python binaries

    pool:
      vmImage: windows-2022

    workspace:
      clean: all

    strategy:
      matrix:
        win32:
          Name: win32
        amd64:
          Name: amd64
        arm64:
          Name: arm64

    variables:
    - group: CPythonSign

    steps:
    - template: ./checkout.yml

    - powershell: |
        $d = (.\PCbuild\build.bat -V) | %{ if($_ -match '\s+(\w+):\s*(.+)\s*$') { @{$Matches[1] = $Matches[2];} }};
        Write-Host "##vso[task.setvariable variable=SigningDescription]Python $($d.PythonVersion)"
      displayName: 'Update signing description'
      condition: and(succeeded(), not(variables['SigningDescription']))

    - powershell: |
        Write-Host "##vso[build.addbuildtag]signed"
      displayName: 'Add build tags'

    - task: DownloadPipelineArtifact@1
      displayName: 'Download artifact: unsigned_bin_$(Name)'
      inputs:
        artifactName: unsigned_bin_$(Name)
        targetPath: $(Build.BinariesDirectory)\bin

    - powershell: |
        copy "$(Build.SourcesDirectory)\Lib\venv\scripts\common\Activate.ps1" .
      displayName: 'Copy files from source'
      workingDirectory: $(Build.BinariesDirectory)\bin

    - template: sign-files.yml
      parameters:
        Include: ${{ parameters.Include }}
        Exclude: ${{ parameters.Exclude }}
        WorkingDir: $(Build.BinariesDirectory)\bin
        ExtractDir: $(Build.BinariesDirectory)\cert
        SigningCertificate: ${{ parameters.SigningCertificate }}

    - task: PublishPipelineArtifact@0
      displayName: 'Publish artifact: bin_$(Name)'
      inputs:
        targetPath: '$(Build.BinariesDirectory)\bin'
        artifactName: bin_$(Name)

    - task: PublishPipelineArtifact@0
      displayName: 'Publish artifact: cert'
      inputs:
        targetPath: '$(Build.BinariesDirectory)\cert'
        artifactName: cert


- ${{ else }}:
  - job: Mark_Unsigned
    displayName: Tag unsigned build

    pool:
      vmImage: windows-2022

    steps:
    - checkout: none

    - powershell: |
        Write-Host "##vso[build.addbuildtag]unsigned"
      displayName: 'Add build tag'
