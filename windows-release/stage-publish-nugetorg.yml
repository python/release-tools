parameters:
  BuildToPublish: current

jobs:
- job: Publish_Nuget
  displayName: Publish Nuget packages
  condition: and(succeeded(), ne(variables['SkipNugetPublish'], 'true'))

  pool:
    vmImage: windows-2022

  workspace:
    clean: all

  steps:
  - checkout: none

  - task: DownloadBuildArtifacts@1
    displayName: 'Download artifact: nuget'
    inputs:
      ${{ if eq(parameters.BuildToPublish, 'current') }}:
        buildType: current
      ${{ else }}:
        buildType: specific
        buildVersionToDownload: specific
        project: $(resources.pipeline.build_to_publish.projectId)
        pipeline: $(resources.pipeline.build_to_publish.pipelineId)
        runId: $(resources.pipeline.build_to_publish.runID)
      artifactName: nuget
      downloadPath: $(Build.BinariesDirectory)

  - powershell: 'gci pythonarm*.nupkg | %{ Write-Host "Not publishing: $($_.Name)"; gi $_ } | del'
    displayName: 'Prevent publishing ARM64 packages'
    workingDirectory: '$(Build.BinariesDirectory)\nuget'
    condition: and(succeeded(), ne(variables['PublishARM64'], 'true'))

  - task: NuGetCommand@2
    displayName: Push packages
    condition: and(succeeded(), eq(variables['IsRealSigned'], 'true'))
    inputs:
      command: push
      packagesToPush: '$(Build.BinariesDirectory)\nuget\*.nupkg'
      nuGetFeedType: external
      publishFeedCredentials: 'Python on Nuget'
